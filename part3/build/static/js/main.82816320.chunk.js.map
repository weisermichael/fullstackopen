{"version":3,"sources":["services/phonebook.js","App.js","index.js"],"names":["baseUrl","newObj","axios","post","then","response","console","log","id","toDelete","delete","get","url","put","Notification","message","type","className","DisplayPerson","toShow","handleDelete","map","person","name","number","onClick","PersonForm","handleSubmit","handleNameChange","handleNumChange","newName","newNum","onSubmit","value","onChange","Filter","handleFilter","App","useState","persons","setPersons","useEffect","phonebookService","data","setNewName","setNewNum","filterParam","setFilterParam","setMessage","setType","handleChange","func","event","target","filter","p","toLowerCase","slice","length","preventDefault","indexOf","newPerson","concat","setTimeout","window","confirm","catch","error","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.82816320.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = 'http://localhost:3001/api/persons'\r\n//const baseUrl = '/api/persons'\r\nconst getAll = () => {\r\n    return axios.get(baseUrl)\r\n}\r\n\r\nconst create = newObj => {\r\n    axios.post(baseUrl, newObj)\r\n         .then(response=>console.log(response))\r\n}\r\n\r\nconst remove = (id) => {\r\n    const toDelete = baseUrl + '/' + id \r\n    //console.log(toDelete)\r\n    axios.delete(toDelete)\r\n}\r\n\r\nconst update = (id, newObj) => {\r\n    const url = baseUrl + '/' + id \r\n    return axios.put(url, newObj)\r\n}\r\n\r\nexport default {\r\n    create: create,\r\n    remove: remove,\r\n    getAll: getAll,\r\n    update: update\r\n}","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport phonebookService from './services/phonebook'\n\nconst Notification = ({ message, type }) => {\n  if (message === null) {\n    return null\n  }\n\n  if (type === \"error\"){\n    return (\n      <div className='error'>\n        {message}\n      </div>\n    )\n  }\n  return (\n    <div className='msg'>\n      {message}\n    </div>\n  )\n}\n\nconst DisplayPerson = ( {toShow, handleDelete} ) => (\n  <>\n    <h2>Numbers</h2>\n    {toShow.map(person=>  <p key={person.name}>{person.name} {person.number}\n                            <button onClick={() => handleDelete(person.name, person.id)}>delete</button>\n                          </p>)}\n  </>\n)\n\nconst PersonForm = ( {handleSubmit, handleNameChange, handleNumChange, newName, newNum}) => (\n  <form onSubmit={handleSubmit}>\n  <div> name:   <input value={newName} onChange={handleNameChange}/> </div>\n  <div> number: <input value={newNum}  onChange={handleNumChange}></input> </div>\n  <div>\n    <button type=\"submit\">add</button>\n  </div>\n</form>\n)\n\nconst Filter = ( {handleFilter} ) => (\n  <div> filter shown with <input onChange={handleFilter}></input></div>\n)\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n\n  useEffect(() => {\n    phonebookService.getAll().then(response => setPersons(response.data))\n  }, [])\n\n  const [ newName, setNewName ] = useState('')\n  const [ newNum, setNewNum ] = useState('')\n  const [ filterParam, setFilterParam ] = useState('')\n  const [ message, setMessage ] = useState(null)\n  const [ type, setType ] = useState('error')\n\n  const handleChange = (func) => {\n    const handler = (event) => {\n      func(event.target.value)\n    } \n    return(\n      handler\n    )\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    if ((persons.map(p=>p.name)).indexOf(newName) === -1){  //check if name already exists\n      //event.preventDefault()\n      const newPerson = {name: newName, number: newNum, id: persons.length+1}\n      phonebookService.create(newPerson)\n      setPersons(persons.concat(newPerson))\n      setType('notification')\n      setMessage(`${newName} added`)\n      setTimeout(() => {\n        setMessage(null)\n      }, 5000)\n      setNewName('')\n      setNewNum('')\n    }\n    else{\n      const result = window.confirm(`${newName} is already added to phonebook. Replace old number with a new number?`)\n      if (result){\n        let person = persons.filter(p=> p.name === newName)[0]\n        //const id = (persons.map(p=>p.name)).indexOf(newName) + 1\n        const id = person.id\n        const newPerson = {...person, number: newNum}\n        phonebookService.update(id, newPerson).then(response => {\n          setPersons(persons.map(p => p.id !== id ? p : newPerson))\n          setType('notification')\n          setMessage(`${newName} updated`)\n          setTimeout(() => {\n            setMessage(null)\n          }, 5000)\n          setNewName('')\n          setNewNum('')\n        }).catch(error => {\n          setType('error')\n          setMessage(`Information of ${newName} already removed from the server`)\n          setTimeout(() => {\n            setMessage(null)\n          }, 5000)\n          setNewName('')\n          setNewNum('')\n        })\n      }\n    }\n  }\n\n  const handleDelete = (name, id) => {\n    const result = window.confirm(`Delete ${name}?`)\n    if (result) {\n      phonebookService.remove(id)\n      setPersons(persons.filter(p => p.id !== id))\n    }\n  }\n\n  const handleFilter = (event) => {\n    setFilterParam(event.target.value.toLowerCase())\n  }\n\n  const toShow = (!filterParam) ? persons : persons.filter(p=> p.name.toLowerCase().slice(0, filterParam.length) === filterParam)\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Notification message={message} type={type} />\n      <Filter handleFilter={handleFilter} />\n      <h2>add a new</h2>\n      <PersonForm handleSubmit={handleSubmit} \n                  handleNameChange={handleChange(setNewName)} \n                  handleNumChange={handleChange(setNewNum)}\n                  newName={newName}\n                  newNum={newNum} />\n      <DisplayPerson toShow={toShow} handleDelete={handleDelete}/>\n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}